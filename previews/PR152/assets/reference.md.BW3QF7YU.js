import{_ as l,c as t,a5 as a,j as i,a as h,G as e,B as k,o as p}from"./chunks/framework.CuRjFkRE.js";const f=JSON.parse('{"title":"Formal API","description":"","frontmatter":{},"headers":[],"relativePath":"reference.md","filePath":"reference.md","lastUpdated":null}'),r={name:"reference.md"},d={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},o={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""};function c(F,s,C,m,u,b){const n=k("Badge");return p(),t("div",null,[s[15]||(s[15]=a('<h1 id="Formal-API" tabindex="-1">Formal API <a class="header-anchor" href="#Formal-API" aria-label="Permalink to &quot;Formal API {#Formal-API}&quot;">â€‹</a></h1><p>The formal API of Chairmarks is defined by the docstrings of public symbols. Any behavior promised by these docstrings should typically remain in all future non-breaking releases. Specific display behavior is not part of the API.</p><p>However, as a package designed primarily for interactive usage, Chairmarks follows <em>soft semantic versioning</em>. A technically breaking change may be released with a non-breaking version number if the change is not expected to cause significant disruptions.</p><ul><li><p><a href="/previews/PR152/reference#Chairmarks.Sample"><code>Chairmarks.Sample</code></a></p></li><li><p><a href="/previews/PR152/reference#Chairmarks.Benchmark"><code>Chairmarks.Benchmark</code></a></p></li><li><p><a href="/previews/PR152/reference#Chairmarks.@b"><code>@b</code></a></p></li><li><p><a href="/previews/PR152/reference#Chairmarks.@be"><code>@be</code></a></p></li><li><p><a href="/previews/PR152/reference#Chairmarks.DEFAULTS"><code>Chairmarks.DEFAULTS</code></a></p></li></ul>',4)),i("details",d,[i("summary",null,[s[0]||(s[0]=i("a",{id:"Chairmarks.Sample",href:"#Chairmarks.Sample"},[i("span",{class:"jlbinding"},"Chairmarks.Sample")],-1)),s[1]||(s[1]=h()),e(n,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[2]||(s[2]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sample</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    evals              </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The number of times the benchmark was evaluated for this sample.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    time               </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The average time taken to run the sample, in seconds per evaluation.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    allocs             </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The average number of allocations made per evaluation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bytes              </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The average number of bytes allocated per evaluation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    gc_fraction        </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The fraction of time spent in garbage collection (0.0 to 1.0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    compile_fraction   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The fraction of time spent compiling (0.0 to 1.0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    recompile_fraction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # The fraction of compile time which was, itself, recompilation (0.0 to 1.0)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    warmup             </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Whether this sample had a warmup run before it (1.0 = yes. 0.0 = no).</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">more fields may be added</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A struct representing a single sample of a benchmark.</p><p><a href="/previews/PR152/reference#Chairmarks.@b"><code>@b</code></a> returns a composite sample formed by taking the field-wise minimum of the measured samples. More fields may be added in the future as more information becomes available.</p><p><a href="https://github.com/LilithHafner/Chairmarks.jl/blob/2236f1c2e9b7d53cbf2a62b4f10c849f57b5e10d/src/types.jl#L1-L19" target="_blank" rel="noreferrer">source</a></p>`,4))]),i("details",E,[i("summary",null,[s[3]||(s[3]=i("a",{id:"Chairmarks.Benchmark",href:"#Chairmarks.Benchmark"},[i("span",{class:"jlbinding"},"Chairmarks.Benchmark")],-1)),s[4]||(s[4]=h()),e(n,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[5]||(s[5]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Benchmark</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    samples</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{Sample}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    ...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">more fields may be added</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>A struct representing a complete benchmark result. Returned by <a href="/previews/PR152/reference#Chairmarks.@be"><code>@be</code></a>.</p><p>More fields may be added in the future to represent non sample specific information.</p><p>The functions <code>minimum</code> and <code>maximum</code> are defined field wise on <code>Benchmark</code> objects and return <a href="/previews/PR152/reference#Chairmarks.Sample"><code>Sample</code></a>s. On Julia 1.9 and above, the functions <code>Statistics.median</code>, <code>Statistics.mean</code>, and <code>Statistics.quantile</code> are also defined field wise on <code>Benchmark</code> objects and return <code>Sample</code>s.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> eval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(:(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sqrt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.307</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3608</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 173.453</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">92.21</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compile time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.778</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3608</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 173.453</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">94.65</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compile time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.494</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3608</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 173.453</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">94.15</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compile time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12.021</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3608</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 173.453</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">95.03</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compile time)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> minimum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ans)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.307</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3608</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 173.453</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">92.21</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> compile time)</span></span></code></pre></div><p><a href="https://github.com/LilithHafner/Chairmarks.jl/blob/2236f1c2e9b7d53cbf2a62b4f10c849f57b5e10d/src/types.jl#L41-L67" target="_blank" rel="noreferrer">source</a></p>`,6))]),i("details",g,[i("summary",null,[s[6]||(s[6]=i("a",{id:"Chairmarks.@b",href:"#Chairmarks.@b"},[i("span",{class:"jlbinding"},"Chairmarks.@b")],-1)),s[7]||(s[7]=h()),e(n,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[8]||(s[8]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[init] setup] f [teardown] keywords</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span></code></pre></div><p>Benchmark <code>f</code> and return the fastest <a href="/previews/PR152/reference#Chairmarks.Sample"><code>Sample</code></a>.</p><p>Use <a href="/previews/PR152/reference#Chairmarks.@be"><code>@be</code></a> for full results.</p><p><code>@b args...</code> is equivalent to <code>summarize(@be args...)</code>. See the docstring for <a href="/previews/PR152/reference#Chairmarks.@be"><code>@be</code></a> for more information.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Benchmark a function</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.833</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78.172</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rand hash </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long does it take to hash a random Float64?</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.757</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Simultaneously benchmark and test</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.291</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.062</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BAD! This repeatedly resorts the same array!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.309</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.08</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 398.769</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() evals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Specify evals=1 to ensure the function is only run once between setup and teardown</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.041</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.125</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) _ sort!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">âˆ˜</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rand! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or, include randomization in the benchmarked function and only allocate once</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">120.536</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># We can use arbitrary expressions in any position in the pipeline, not just simple functions.</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">183.871</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This runs for a long time, so it is only run once (with no warmup)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.447</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s (without a warmup)</span></span></code></pre></div><p><a href="https://github.com/LilithHafner/Chairmarks.jl/blob/2236f1c2e9b7d53cbf2a62b4f10c849f57b5e10d/src/public.jl#L1-L38" target="_blank" rel="noreferrer">source</a></p>`,7))]),i("details",o,[i("summary",null,[s[9]||(s[9]=i("a",{id:"Chairmarks.@be",href:"#Chairmarks.@be"},[i("span",{class:"jlbinding"},"Chairmarks.@be")],-1)),s[10]||(s[10]=h()),e(n,{type:"info",class:"jlObjectType jlMacro",text:"Macro"})]),s[11]||(s[11]=a(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">@be</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [[init] setup] f [teardown] keywords</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span></span></code></pre></div><p>Benchmark <code>f</code> and return the results as a <a href="/previews/PR152/reference#Chairmarks.Benchmark"><code>Benchmark</code></a>.</p><p>Use <a href="/previews/PR152/reference#Chairmarks.@b"><code>@b</code></a> for abbreviated results.</p><p><strong>Positional argument pipeline syntax</strong></p><p>The four positional arguments form a pipeline with the return value of each passed as an argument to the next. Consequently, the first expression in the pipeline must be a nullary function. If you use a symbol like <code>rand</code>, it will be interpreted as a function and called normally. If you use any other expression, it will be interpreted as the body of a nullary function. For example in <code>@be rand(10)</code> the function being benchmarked is <code>() -&gt; rand(10)</code>.</p><p>Later positions in the pipeline must be unary functions. As with the first function, you may provide either a function, or an expression. However, the rules are slightly different. If the expression you provide contains an <code>_</code> as an rvalue (which would otherwise error), it is interpreted as a unary function and any such occurrences of <code>_</code> are replaced with result from the previous function in the pipeline. For example, in <code>@be rand(10) sort(_, rev=true)</code> the setup function is <code>() -&gt; rand(10)</code> and the primary function is <code>x -&gt; sort(x, rev=true)</code>. If the expression you provide does not contain an <code>_</code> as an rvalue, it is assumed to produce a function and is called with the result from the previous function in the pipeline. For example, in <code>@be rand(10) sort!âˆ˜shuffle!</code>, the primary function is simply <code>sort!âˆ˜shuffle!</code> and receives no preprocessing. <code>@macroexpand</code> can help elucidate what is going on in specific cases.</p><p><strong>Positional argument disambiguation</strong></p><p><code>setup</code>, <code>teardown</code>, and <code>init</code> are optional and are parsed with that precedence giving these possible forms:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@be f</span></span>
<span class="line"><span>@be setup f</span></span>
<span class="line"><span>@be setup f teardown</span></span>
<span class="line"><span>@be init setup f teardown</span></span></code></pre></div><p>You may use an underscore <code>_</code> to provide other combinations of arguments. For example, you may provide a <code>teardown</code> and no <code>setup</code> with</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@be _ f teardown</span></span></code></pre></div><p><strong>Keyword arguments</strong></p><p>Provide keyword arguments using <code>name=value</code> syntax similar to how you provide keyword arguments to ordinary functions. Keyword arguments to control executions are</p><ul><li><p><code>evals::Integer</code> How many function evaluations to perform in each sample. Defaults to automatic calibration.</p></li><li><p><code>samples::Integer</code> Maximum number of samples to take. Defaults to unlimited and cannot be specified without also specifying <code>evals</code>. Specifying <code>samples = 0</code> will cause <code>@be</code> to run the warmup sample only and return that sample.</p></li><li><p><code>seconds::Real</code> Maximum amount of time to spend benchmarking. Defaults to <a href="/previews/PR152/reference#Chairmarks.DEFAULTS"><code>Charimarks.DEFAULTS.seconds</code></a> (which is <code>0.1</code> by default) unless <code>samples</code> is specified, in which case it defaults to 10 times as long (1 second, by default). Users are free to modify Charimarks.DEFAULTS.seconds for their own interactive usage and its default value may change in the future. Set to <code>Inf</code> to disable the time limit. Compile time is typically not counted against this limit. A reasonable effort is made to respect the time limit but if samples is unspecified it is always exceeded by a small about (less than 1%) and can be significantly exceeded when benchmarking long running functions.</p></li><li><p><code>gc::Bool</code> An experimental option to disable garbage collection during benchmarking. Defaults to <a href="/previews/PR152/reference#Chairmarks.DEFAULTS"><code>Charimarks.DEFAULTS.gc</code></a> which is <code>true</code> by default. Set to <code>false</code> to disable garbage collection during benchmarking. Disabling garbage collection may cause out of memory errors during a benchmark that requires garbage collection, but should not result in memory leaks that survive past the end of the benchmark. As an experimental option, this may be removed in the future or its semantics may change. This option also depends on Julia internals and so it may break in future versions of Julia.</p></li></ul><p><strong>Interpolation</strong></p><p>You may use standard interpolation syntax within any of the positional arguments. This will cause the interpolated values to be evaluated only once upon execution of the benchmark and the runtime of that evlaution will not be included in reported results. For example,</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>x = [1,2,3]</span></span>
<span class="line"><span>@b length($x)</span></span></code></pre></div><p>is equivalent to</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>@b [1,2,3] _ length _</span></span></code></pre></div><p><strong>Evaluation model</strong></p><p>At a high level, the implementation of this function looks like this</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>x = init()</span></span>
<span class="line"><span>results = []</span></span>
<span class="line"><span>for sample in 1:samples</span></span>
<span class="line"><span>    y = setup(x)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    t0 = time()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    z = f(y)</span></span>
<span class="line"><span>    for _ in 2:evals</span></span>
<span class="line"><span>        f(y)</span></span>
<span class="line"><span>    end</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    push!(results, time()-t0)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    teardown(z)</span></span>
<span class="line"><span>end</span></span></code></pre></div><p>So <code>init</code> will be called once, <code>setup</code> and <code>teardown</code> will be called once per sample, and <code>f</code> will be called <code>evals</code> times per sample.</p><p><strong>Examples</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Benchmark a function</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 267</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78.172</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.354</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78.172</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">159.639</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78.172</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.37</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.579</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 78.172</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99.93</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rand hash </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># How long does it take to hash a random Float64?</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4967</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10805</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.758</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.774</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.820</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.279</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Simultaneously benchmark and test</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2689</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9.771</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.062</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.562</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.062</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14.933</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18.097</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.04</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.916</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20.062</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99.52</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># BAD! This repeatedly resorts the same array!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2850</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.647</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 797.538</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.971</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 797.538</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.212</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 800.745</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.03</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">262.163</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.15</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 955.077</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bytes, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">98.95</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) sort! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() evals</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Specify evals=1 to ensure the function is only run once between setup and teardown</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6015</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluation</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9.666</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.125</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.916</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.125</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12.330</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Î¼s (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10.159</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.02</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.883</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ms (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> allocs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12.125</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KiB, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">99.56</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gc time)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) _ sort!</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">âˆ˜</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rand! </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">issorted</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">||</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Or, include randomization in the benchmarked function and only allocate once</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3093</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">237</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">121.308</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">126.055</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128.108</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">303.447</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># We can use arbitrary expressions in any position in the pipeline, not just simple functions.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3387</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> samples with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">144</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluations</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> min    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">183.160</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> median </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">184.611</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mean   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">188.869</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> max    </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">541.667</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ns</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> @be</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> _ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5e8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(x); </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; x) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># This runs for a long time, so it is only run once (with no warmup)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Benchmark</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sample with </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> evaluation</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        2.488</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s (without a warmup)</span></span></code></pre></div><p><a href="https://github.com/LilithHafner/Chairmarks.jl/blob/2236f1c2e9b7d53cbf2a62b4f10c849f57b5e10d/src/public.jl#L44-L207" target="_blank" rel="noreferrer">source</a></p>`,26))]),i("details",y,[i("summary",null,[s[12]||(s[12]=i("a",{id:"Chairmarks.DEFAULTS",href:"#Chairmarks.DEFAULTS"},[i("span",{class:"jlbinding"},"Chairmarks.DEFAULTS")],-1)),s[13]||(s[13]=h()),e(n,{type:"info",class:"jlObjectType jlConstant",text:"Constant"})]),s[14]||(s[14]=a('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Chairmarks</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">DEFAULTS</span></span></code></pre></div><p>A global constant that holds default benchmarking parameters.</p><p>When a parameter is unspecified it defaults to the value stored in <code>Chairmarks.DEFAULTS</code>.</p><p>Currently there is one stable default: <code>Chairmarks.DEFAULTS.seconds::Float64</code> which defaults to 0.1; and one experimental default: <code>Chairmarks.DEFAULTS.gc::Bool</code> which defaults to <code>true</code>.</p><p>All default values may be changed in the future and the <code>gc</code> default may be removed entirely.</p><p><a href="https://github.com/LilithHafner/Chairmarks.jl/blob/2236f1c2e9b7d53cbf2a62b4f10c849f57b5e10d/src/public.jl#L219-L232" target="_blank" rel="noreferrer">source</a></p>',6))])])}const A=l(r,[["render",c]]);export{f as __pageData,A as default};
